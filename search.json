[{"title":"Key Points of NOIp Popularization Group","url":"/2020/05/05/Key-Points-of-NOIp-Popularization-Group/","content":"<h3 id=\"Entry\"><a href=\"#Entry\" class=\"headerlink\" title=\"Entry\"></a>Entry</h3><h4 id=\"P1035-summation-of-series\"><a href=\"#P1035-summation-of-series\" class=\"headerlink\" title=\"P1035 summation of series\"></a>P1035 summation of series</h4><blockquote>\n<p><strong>DESCRIPTION</strong><br>Known: Sn= 1+1/2+1/3+…+1/n.<br>It’s obvious that for any integer k when integer n is big enough, Sn&gt;k.<br>Now give an integer k. Please find the smallest n which makes Sn&gt;k.<br><strong>INPUT FORMAT</strong><br>A positive integer k.<br><strong>OUTPUT FORMAT</strong><br>A positive integer n.<br><strong>SAMPLE</strong><br>Input        Output<br>1                2</p>\n<p><strong>TIPS</strong><br>For 100% data, 1&lt;=k&lt;=15</p>\n</blockquote>\n<p>It should be noted that: integer data cannot appear in floating-point operations, otherwise it becomes an integer operation.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> sn=<span class=\"number\">0.0000</span>;<span class=\"comment\">//Pay attention to data accuracy</span></span><br><span class=\"line\">\t<span class=\"keyword\">double</span> temp=<span class=\"number\">0.0000</span>;<span class=\"comment\">//Pay attention to data accuracy </span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;k;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(sn&lt;=k)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tn++;</span><br><span class=\"line\">\t\ttemp=<span class=\"number\">1.0000</span>/n;<span class=\"comment\">//do not use int data </span></span><br><span class=\"line\">\t\tsn=sn+temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;n;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h4 id=\"P5681-CSPJX2019-acreage-Unofficial-data\"><a href=\"#P5681-CSPJX2019-acreage-Unofficial-data\" class=\"headerlink\" title=\"P5681 [CSPJX2019]acreage[Unofficial data]\"></a>P5681 [CSPJX2019]acreage[Unofficial data]</h4><blockquote>\n<p><strong>DESCRIPTION</strong></p>\n<p>Alice has a square with side length a. Bob has a rectangle of length b and width c.<br>Please tell them whose graphic area is larger.</p>\n<p><strong>INPUT FORMAT</strong><br>Tree positive integers a,b,c.</p>\n<p><strong>OUTPUT FORMAT</strong><br>A string. If the square area is large, output “Alice”, otherwise output Bob.</p>\n<p><strong>SAMPLE</strong><br>Input<br>5 4 6<br>Output<br>Alice</p>\n<p><strong>TIPS</strong><br>For 30% data, 1&lt;=a,b,c&lt;=100,b=c;<br>For 80% data, 1&lt;=a,b,c&lt;=10^4;<br>For 100% data, 1&lt;=a,b,c&lt;=10^9;</p>\n</blockquote>\n<p>It should be noted that: The range of integer data is not enough. So you can use long long data.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,b,c;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a*a&gt;b*c) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Alice\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Bob\"</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>In addition, as mentioned in the previous question, you can’t use int data in calculation. If you do this, the result will be converted to int. So you can use the following method to forcefully convert the data type. By forced type conversion, convert 1 to longlong type: 1LL.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a=<span class=\"number\">0</span>,b=<span class=\"number\">0</span>,c=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> r1,r2;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">\tr1=<span class=\"number\">1l</span>l*a*a; <span class=\"comment\">//By forced type conversion, convert 1 to longlong type.And then convert the calculation result to longlong type </span></span><br><span class=\"line\">\tr2=<span class=\"number\">1l</span>l*b*c;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(r1&gt;r2) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Alice\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Bob\"</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Of course you can change the calculation from Multiplicative to divided. By this way, you can use double data in this question.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">double</span> a,b,c;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a/b&gt;c/a) <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Alice\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Bob\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>The following is the upper limit of various data types for reference.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;climits&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n_int=INT_MAX;</span><br><span class=\"line\">\tshort n_short=SHRT_MAX;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> n_long=LONG_MAX;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n_llong=LLONG_MAX;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"int is \"</span>&lt;&lt;<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>)&lt;&lt;<span class=\"string\">\" bytes.\"</span>&lt;&lt;<span class=\"built_in\">endl</span>; </span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"short is \"</span>&lt;&lt;<span class=\"keyword\">sizeof</span> n_short&lt;&lt;<span class=\"string\">\" bytes.\"</span>&lt;&lt;<span class=\"built_in\">endl</span>; </span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"long is \"</span>&lt;&lt;<span class=\"keyword\">sizeof</span> n_long&lt;&lt;<span class=\"string\">\" bytes.\"</span>&lt;&lt;<span class=\"built_in\">endl</span>; </span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"long long is \"</span>&lt;&lt;<span class=\"keyword\">sizeof</span> n_llong&lt;&lt;<span class=\"string\">\" bytes.\"</span>&lt;&lt;<span class=\"built_in\">endl</span>; </span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Maximum values:\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"int: \"</span>&lt;&lt;n_int&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"short: \"</span>&lt;&lt;n_short&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"long: \"</span>&lt;&lt;n_long&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"long long: \"</span>&lt;&lt;n_llong&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Minimum int value=\"</span>&lt;&lt;INT_MIN&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Bits per byte= \"</span>&lt;&lt;CHAR_BIT&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> is <span class=\"number\">4</span> bytes.</span><br><span class=\"line\">short is <span class=\"number\">2</span> bytes.</span><br><span class=\"line\"><span class=\"keyword\">long</span> is <span class=\"number\">4</span> bytes.</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> is <span class=\"number\">8</span> bytes.</span><br><span class=\"line\"></span><br><span class=\"line\">Maximum values:</span><br><span class=\"line\"><span class=\"keyword\">int</span>: <span class=\"number\">2147483647</span></span><br><span class=\"line\">short: <span class=\"number\">32767</span></span><br><span class=\"line\"><span class=\"keyword\">long</span>: <span class=\"number\">2147483647</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span>: <span class=\"number\">9223372036854775807</span></span><br><span class=\"line\"></span><br><span class=\"line\">Minimum <span class=\"keyword\">int</span> value=<span class=\"number\">-2147483648</span></span><br><span class=\"line\">Bits per <span class=\"keyword\">byte</span>= <span class=\"number\">8</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n\n\n<h3 id=\"Popularization\"><a href=\"#Popularization\" class=\"headerlink\" title=\"Popularization-\"></a>Popularization-</h3><h3 id=\"Popularization-Improvement\"><a href=\"#Popularization-Improvement\" class=\"headerlink\" title=\"Popularization/Improvement-\"></a>Popularization/Improvement-</h3><h3 id=\"Popularization-Improvement-1\"><a href=\"#Popularization-Improvement-1\" class=\"headerlink\" title=\"Popularization+/Improvement\"></a>Popularization+/Improvement</h3><h3 id=\"Improvement-Provincial-Election\"><a href=\"#Improvement-Provincial-Election\" class=\"headerlink\" title=\"Improvement+/Provincial Election-\"></a>Improvement+/Provincial Election-</h3>","tags":["NOIp"]}]