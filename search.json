[{"title":"Key Points of NOIp Popularization Group","url":"/2020/05/05/Key-Points-of-NOIp-Popularization-Group/","content":"\n### Entry\n\n#### P1035 summation of series\n\n> **DESCRIPTION**\n> Known: Sn= 1+1/2+1/3+…+1/n. \n> It’s obvious that for any integer k when integer n is big enough, Sn>k.\n> Now give an integer k. Please find the smallest n which makes Sn>k.\n> **INPUT FORMAT**\n> A positive integer k.\n> **OUTPUT FORMAT**\n> A positive integer n.\n> **SAMPLE**\n> Input\t\tOutput\n> 1\t\t\t\t2\n> \n> **TIPS**\n> For 100% data, 1<=k<=15\n\nIt should be noted that: integer data cannot appear in floating-point operations, otherwise it becomes an integer operation.\n\n```c++\n#include<iostream>\nusing namespace std;\n\n\nint main()\n{\n\tint n=0;\n\tint k=0;\n\tdouble sn=0.0000;//Pay attention to data accuracy\n\tdouble temp=0.0000;//Pay attention to data accuracy \n\t\n\tcin>>k;\n\twhile(sn<=k)\n\t{\n\t\tn++;\n\t\ttemp=1.0000/n;//do not use int data \n\t\tsn=sn+temp;\n\t}\n\t\n\tcout<<n;\n\t\n\treturn 0;\n\t\n}\n```\n\n<br>\n\n#### P5681 [CSPJX2019]acreage[Unofficial data]\n\n>**DESCRIPTION**\n>Alice has a square with side length a. Bob has a rectangle of length b and width c. \n>Please tell them whose graphic area is larger.\n>**INPUT FORMAT**\n>Tree positive integers a,b,c.\n>**OUTPUT FORMAT**\n>A string. If the square area is large, output \"Alice\", otherwise output Bob.\n>**SAMPLE**\n>Input\n>5 4 6\n>Output\n>Alice\n>Input\n>7 5 10\n>Output\n>Bob\n>**TIPS**\n>For 30% data, 1<=a,b,c<=100,b=c;\n>For 80% data, 1<=a,b,c<=10^4;\n>For 100% data, 1<=a,b,c<=10^9;\n\nIt should be noted that: The range of integer data is not enough. So you can use long long data.\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tlong long a,b,c;\n\tcin>>a>>b>>c;\n\tif(a*a>b*c) cout<<\"Alice\";\n\telse cout<<\"Bob\";\n\t\n\treturn 0;\n}\n```\n\nIn addition, as mentioned in the previous question, you can't use int data in calculation. If you do this, the result will be converted to int. So you can use the following method to forcefully convert the data type. By forced type conversion, convert 1 to longlong type: 1LL.\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tint a=0,b=0,c=0;\n\tlong long r1,r2;\n\t\n\tcin>>a>>b>>c;\n\tr1=1ll*a*a; //By forced type conversion, convert 1 to longlong type.And then convert the calculation result to longlong type \n\tr2=1ll*b*c;\n\t\n\tif(r1>r2) cout<<\"Alice\";\n\telse cout<<\"Bob\";\n\t\n\treturn 0;\n}\n```\n\nOf course you can change the calculation from Multiplicative to divided. By this way, you can use double data in this question.\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tdouble a,b,c;\n\tcin>>a>>b>>c;\n\t\n\tif(a/b>c/a) cout<<\"Alice\";\n\telse cout<<\"Bob\";\n\nreturn 0;\t\n } \n```\n\nThe following is the upper limit of various data types for reference.\n\n```c++\n#include<iostream>\n#include<climits>\nusing namespace std;\n\nint main()\n{\n\tint n_int=INT_MAX;\n\tshort n_short=SHRT_MAX;\n\tlong n_long=LONG_MAX;\n\tlong long n_llong=LLONG_MAX;\n\t\n\tcout<<\"int is \"<<sizeof(int)<<\" bytes.\"<<endl; \n\tcout<<\"short is \"<<sizeof n_short<<\" bytes.\"<<endl; \n\tcout<<\"long is \"<<sizeof n_long<<\" bytes.\"<<endl; \n\tcout<<\"long long is \"<<sizeof n_llong<<\" bytes.\"<<endl; \n\tcout<<endl;\n\t\n\tcout<<\"Maximum values:\"<<endl;\n\tcout<<\"int: \"<<n_int<<endl;\n\tcout<<\"short: \"<<n_short<<endl;\n\tcout<<\"long: \"<<n_long<<endl;\n\tcout<<\"long long: \"<<n_llong<<endl<<endl;\n\t\n\tcout<<\"Minimum int value=\"<<INT_MIN<<endl;\n\tcout<<\"Bits per byte= \"<<CHAR_BIT<<endl;\n\t\n\treturn 0;\n}\n```\n\n```c++\nint is 4 bytes.\nshort is 2 bytes.\nlong is 4 bytes.\nlong long is 8 bytes.\n\nMaximum values:\nint: 2147483647\nshort: 32767\nlong: 2147483647\nlong long: 9223372036854775807\n\nMinimum int value=-2147483648\nBits per byte= 8\n```\n\n<br>\n\n#### P1075 Prime factorization\n\n>**DESCRIPTION**\n>Known:Positive integer n is the product of two different prime numbers.\n>Please find the larger of the two prime numbers\n>**INPUT FORMAT**\n>A positive integer n.\n>**OUTPUT FORMAT**\n>A positive integer p which is the larger prime number.\n>**SAMPLE**\n>Input\n>21\n>Output\n>7\n>**TIPS**\n>n<=2*10^9\n\nAt first I didn't grasp the essence, the code was very complicated. This causes the algorithm to time out.\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint judge(int a)\n{\n\tint i=0;\n\tfor(i=2;i<a;i++)\n\t{\n\t\tif(a%i==0) return 0;//非质数返回0 \n\t}\n\treturn 1; \n}\n\nint main()\n{\n\tint n=0;\n\tint i=0;\n\tcin>>n;\n\t\n\tfor(i=n;i>1;i--)\n\t{\n\t\tif(n%i==0 &&judge(i)==1)\n\t\tbreak;\n\t}\n\tcout<<i;\n\t\n\treturn 0;\n}\n```\n\nAfter catching the essence, I made some mistakes in the order of the loop.\n\nWe should find that due to the nature of multiplication, we enumerate from low to high values faster than from high to low.\n\n```c++\n#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tint n=0;\n\tint i=0;\n\tcin>>n;\n\t\n\tfor(i=2;i<=n/2;i++)\n\t{\n\t\tif(n%i==0)\n\t\tbreak;\n\t}\n\tcout<<n/i;\n\t\n\treturn 0;\n}\n```\n\n<br>\n\n#### P5015Headline statistics\n\n>**DESCRIPTION**\n>Kaikai has just written a wonderful composition. How many characters are there in the title of this composition?\n>Note: The title may contain uppercase and lowercase English letters, numeric characters, spaces, and line breaks.\n>When counting headline characters, spaces and line breaks are not counted.\n>**INPUT FORMAT**\n>The input file has only one line, a string s.\n>**OUTPUT FORMAT**\n>The output file has only one line and contains an integer, that is, the number of characters in the title of the composition (excluding spaces and line breaks).\n>**SAMPLE**\n>intput\n>234\n>output\n>3\n>input\n>Ca 45\n>output\n>4\n>**TIPS**\n>Provision | s | represents the length of the string s (that is, the number of characters and spaces in the string).\n>For 40% data, 1<=| s |<=5, ensure that the input is numeric characters and line breaks at the end of the line;\n>For 80% data, 1<=| s |<=5, the input may only contain uppercase and lowercase English letters, numeric characters, and end-of-line newlines;\n>For 100% data, 1<=| s |<=5, input may include upper and lower case English letters, numeric characters, spaces, and end-of-line newlines;\n\nPay attention to the header file and the usage of getchar().\n\n```c++\n#include<iostream>\n#include<string>\n#include<stdio.h>\nusing namespace std;\n\nint main()\n{\n\tchar c='a';\n\tint l=0;\n    while(c!='\\n')//line breaks\n    {\n    \tc=getchar();\n    \tif(c!=' ') l++;\n\t}\n\n\tl--; \n\tcout<<l;\n\t\n\treturn 0; \n}\n```\n\n<br>\n\n\n\n\n\n### Popularization-\n\n\n\n### Popularization/Improvement-\n\n\n\n### Popularization+/Improvement\n\n\n\n### Improvement+/Provincial Election-","tags":["NOIp"]}]